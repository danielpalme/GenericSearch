@model GenericSearch.UI.Models.GrammarSearchViewModel
@{
    ViewData["Title"] = "Grammar Search";
}
<div class="card border-info">
    <div class="card-body">
        <h5 class="card-title">Grammar</h5>
        You can use the following operators:
        <ul>
            <li>' ', 'and', '&': Searches for <strong>all</strong> keywords.<br><strong>Sample</strong>: <i>ab & ef</i></li>
            <li>'or', '|': Searches for <strong>one of</strong> the keywords.<br><strong>Sample</strong>: <i>ab or ef</i></li>
            <li>'not', '-': Exclude keyword form search<br><strong>Sample</strong>: <i>not ab</i></li>
            <li>'( ... )': Brackets can be used to specify precedence.<br><strong>Sample</strong>: <i>ab and (cd or kl)</i></li>
        </ul>
    </div>
</div>
<br />
<form method="post">
    <div class="form-group row">
        <label asp-for="SearchTerm" class="col-sm-2 control-label"></label>
        <div class="col-sm-2">
            <input asp-for="SearchTerm" class="form-control" />
        </div>
        <div class="col-sm-8">
            <span asp-validation-for="SearchTerm"></span>
        </div>
    </div>

    <div class="form-group row">
        <label asp-for="Grammar" class="col-sm-2 control-label"></label>
        <div class="col-sm-2">
            <select asp-for="Grammar" asp-items="Html.GetEnumSelectList(typeof(Grammar))" class="form-control"></select>
        </div>
        <div class="col-sm-8">
            <span asp-validation-for="Grammar"></span>
        </div>
    </div>

    <div class="form-group row">
        <div class="offset-sm-2 col-sm-10">
            <button type="submit" class="btn btn-info">Apply filters</button>
        </div>
    </div>
</form>
@if (this.Model!.Terms != null && this.Model.Terms.Any())
{
    string text = string.Join(", ", this.Model.Terms);

    <div class="card border-info">
        <div class="card-body">
            <h3 class="card-title">Terms</h3>
            @text
        </div>
    </div>
}
<br />
<table class="table table-striped table-sm">
    <thead><tr><th>Text</th></tr></thead>
    <tbody>
        @{
            foreach (var item in this.Model.Data)
            {
                <tr>
                    <td>@item.Text.HighlightKeyWords(this.Model.Terms!)</td>
                </tr>
            }
        }
    </tbody>
</table>
